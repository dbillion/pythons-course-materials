Python 3.7.4 (tags/v3.7.4:e09359112e, Jul  8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> l = list()
>>> l
[]
>>> type(l)
<class 'list'>
>>> dir(l)
['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
>>> l1 = list(1,2,3)
Traceback (most recent call last):
  File "<pyshell#4>", line 1, in <module>
    l1 = list(1,2,3)
TypeError: list expected at most 1 arguments, got 3
>>> l1 = list([1,2,3])
>>> l
[]
>>> l1
[1, 2, 3]
>>> l.append(1)
>>> l.append(23)
>>> l.append(2)
>>> l
[1, 23, 2]
>>> l1
[1, 2, 3]
>>> l
[1, 23, 2]
>>> l.extend(l1)
>>> l
[1, 23, 2, 1, 2, 3]
>>> l1
[1, 2, 3]
>>> l
[1, 23, 2, 1, 2, 3]
>>> l = l + [3, 5, 6]
>>> 
>>> l
[1, 23, 2, 1, 2, 3, 3, 5, 6]
>>> 
>>> 
>>> 
>>> 
>>> l
[1, 23, 2, 1, 2, 3, 3, 5, 6]
>>> l.count(2)
2
>>> l.count(3)
2
>>> l.index(2)
2
>>> l[2] = 7
>>> l.index(3)
5
>>> l[5] = 0
>>> l
[1, 23, 7, 1, 2, 0, 3, 5, 6]
>>> l[0] = 4
>>> l
[4, 23, 7, 1, 2, 0, 3, 5, 6]
>>> l[:]
[4, 23, 7, 1, 2, 0, 3, 5, 6]
>>> l[3:6]
[1, 2, 0]
>>> l[::-1]
[6, 5, 3, 0, 2, 1, 7, 23, 4]
>>> l
[4, 23, 7, 1, 2, 0, 3, 5, 6]
>>> l.sort()
>>> l
[0, 1, 2, 3, 4, 5, 6, 7, 23]
>>> l.reverse()
>>> l
[23, 7, 6, 5, 4, 3, 2, 1, 0]
>>> l.pop()
0
>>> len(l)
8
>>> l.pop()
1
>>> len(l)
7
>>> l1
[1, 2, 3]
>>> l1.clear()
>>> 
>>> 
>>> 

>>> l1
[]
>>> l
[23, 7, 6, 5, 4, 3, 2]
>>> 23 in l
True
>>> 24 in l
False
>>> 24 not in  l
True
>>> 
>>> 
>>> 
>>> a = [1, 2, 3]
>>> b = [1, 2, 3]
>>> a is b
False
>>> s1  = 'abc'
>>> s2 = 'abc'
>>> s1 is s2
True
>>> del b
>>> b
Traceback (most recent call last):
  File "<pyshell#68>", line 1, in <module>
    b
NameError: name 'b' is not defined
>>> 
>>> 
>>> 
>>> b = a
>>> b is a
True
>>> s = ['a', 'b', 'c']
>>> s.reverse()
>>> s
['c', 'b', 'a']
>>> s.sort()
>>> s
['a', 'b', 'c']
>>> l1 = [x**2 for x in range(11)]
>>> l1
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> len(l1)
11
>>> summ = sum(l1)
>>> summ
385
>>> summ/len(l1)
35.0
>>> import math as m
>>> l = [round(m.pi, i) for i in range(10)]
>>> l
[3.0, 3.1, 3.14, 3.142, 3.1416, 3.14159, 3.141593, 3.1415927, 3.14159265, 3.141592654]
>>> 
============== RESTART: C:/Users/tausi/Desktop/matrix_print.py ==============
1 2 3 

4 5 6 8 9 

55 33 44 44 466 

>>> m
[[1, 2, 3], [4, 5, 6, 8, 9], [55, 33, 44, 44, 466]]
>>> len(m)
3
>>> m[2][4]
466
>>> l
Traceback (most recent call last):
  File "<pyshell#97>", line 1, in <module>
    l
NameError: name 'l' is not defined
>>> l1
Traceback (most recent call last):
  File "<pyshell#98>", line 1, in <module>
    l1
NameError: name 'l1' is not defined
>>> l = [x** 3 for x in range(1, 10)]
>>> l
[1, 8, 27, 64, 125, 216, 343, 512, 729]
>>> del l[4:6]
>>> l
[1, 8, 27, 64, 343, 512, 729]
>>> del l
>>> l
Traceback (most recent call last):
  File "<pyshell#104>", line 1, in <module>
    l
NameError: name 'l' is not defined
>>> m
[[1, 2, 3], [4, 5, 6, 8, 9], [55, 33, 44, 44, 466]]
>>> del m
>>> m
Traceback (most recent call last):
  File "<pyshell#107>", line 1, in <module>
    m
NameError: name 'm' is not defined
>>> import random as rnd
>>> m
Traceback (most recent call last):
  File "<pyshell#109>", line 1, in <module>
    m
NameError: name 'm' is not defined
>>> m = [[1, 2, 3], [4, 5, 6, 8, 9], [55, 33, 44, 44, 466]]
>>> m
[[1, 2, 3], [4, 5, 6, 8, 9], [55, 33, 44, 44, 466]]
>>> m[2][2:3]
[44]
>>> m[2][2:4]
[44, 44]
>>> del m[2][2:3]
>>> m
[[1, 2, 3], [4, 5, 6, 8, 9], [55, 33, 44, 466]]
>>> rnd
<module 'random' from 'C:\\Python37\\lib\\random.py'>
>>> l = [1, 2, 3, 4, 5, 6]
>>> rnd.choice(l)
2
>>> p = ['pass', 'fail']
>>> rnd.choice(p)
'fail'
>>> rnd.choice(p)
'pass'
>>> rnd.choice(p)
'pass'
>>> rnd.choice(p)
'pass'
>>> 